# Наредба вишеструког гранања

Наредба вишеструког гранања `switch-case` може да помогне у контроли
вишеструког гранања, тако да програм изгледа прегледно и сажето. Општи облик
наредбе вишеструког гранања `switch-case` је...

```c
switch(izraz)
{
case konstanta_1 : naredba_1;
case konstanta_2 : naredba_2;
...
case konstanta_n : naredba_n;
default: naredba;
}
```

...где `izraz` мора бити целобројног типа, а `konstanta_1`, `konstanta_2` ...
`konstanta_n` у `case` гранама истог типа као `izraz`. `naredbа_1`, `naredbа_2`
... `naredba_n` могу бити или појединачне наредбе или блокови наредби. Не могу
постојати две `case` гране са истом константом. Прво се израчунава вредност
`izraz` и проналази се грана чија је вредност константе једнака тој вредности.
Уколико се пронађе таква грана извршава се блок наредби почевши од те гране па
до краја `switch` наредбе. Ако се вредност израза не поклапа ни са једном
константом, онда се извршава блок наредби у `default` грани уколико постоји.
Најчешће је потребно да се изврши само једна грана и тада се користи наредба
`break`. Ако се наредба `break` наведе на крају блока наредби у грани, прескаче
се извршавање свих осталих грана до краја `switch` наредбе.

На пример, задатак је да напишеш алгоритам и програм у програмском језику C
који на стандардни излаз исписује назив дана у недељи на основу редног броја
дана, од `1` до `7`, унетог са стандардног улаза. Ако се унесе број ван задатог
опсега, програм треба да испише поруку о грешци на стандардни излаз.

Алгоритамско решење овог задатка представљено дијаграмом тока може да изгледа
овако:

```{image} images/visestruko0.png
:width: 100%
:align: center
:alt: Наредба вишеструког гранања
```

Програм у програмском језику C, решен са `if-else` наредбама, може да изгледа овако:

```{literalinclude} code/visestruko0.c
:language: c
```

Аналогно претходном решењу, решење са наредбом вишеструког гранања...

```{literalinclude} code/visestruko1.c
:language: c
```

...свакако изгледа много прегледније и сажетије.

Ако је потребно да за више различитих константи наведеш исту наредбу или блок
наредби, онда `case` гране можеш груписати.

На пример, задатак је да напишеш програм у програмском језику C који на
стандардни излаз исписује да ли је дан радни или нерадни на основу редног броја
дана, од `1` до `7`, унетог са стандардног улаза. Ако се унесе број ван задатог
опсега, програм треба да испише поруку о грешци на стандардни излаз.

```{literalinclude} code/visestruko2.c
:language: c
```

Пошто се за памћење карактера у програмском језику C користе подаци типа
`char`, односно мали целобројни подаци, онда и `izraz` у наредби вишеструког
гранања може бити карактер.

На пример, задатак је да напишеш програм у програмском језику C који на
стандардни излаз исписује резултат аритметичког израза унетог са стандардног
улаза. Аритметички израз треба да буде формиран помоћу два операнда реалног
типа двоструке прецизности између којих се налази знак операције `+`, `-`, `*`
или `/` (нпр. `1+2` или `3/4` и сл.). У случају погрешног уноса програм треба
да испише поруку о грешци на стандардни излаз.

```{literalinclude} code/visestruko3.c
:language: c
```
