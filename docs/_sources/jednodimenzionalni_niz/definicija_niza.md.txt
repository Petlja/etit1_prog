# Дефиниција једнодимнезионалног низа

Низ као изведени тип података припада групи **хомогених типова података**, што
значи да поседује скуп података истог типа. Каже се да низ представља структуру
података у којој су сви подаци истог типа.

Појединачни подаци у низу називају се **елементи низа**. Сваки елемент низа има
тачно одређену позицију на основу које му се додељује **индекс** који је увек
целобројног типа `int`. Ако низ има $n$ елемената, онда је индекс првог
елемента низа `0`, другог `1`, трећег `2`, … и $n$-тог `n-1`. Максималан број
елемената неког низа назива се и **димензија низа**, па отуд назив
једнодимензионални низ.

```{infonote}
Ученици који се први пут сусрећу са низовима у програмирању, често греше у раду
са индексима низа јер их посматрају као у математици. У програмирању, први
елемент низа има индекс 0, а не 1, други елемент има индекс 1, а не 2 итд.
```

```{image} images/niz.png
:width: 70%
:align: center
:alt: Низ од 15 елемената
```

Сви елементи низа увек се налазе у секвенцијалним меморијским локацијама, један
поред другог, почевши од меморијске адресе нултог елемента и завршавајући са
меморијском адресом последњег. На пример, претходни низ у којем се чува 15
оцена, односно вредности типа `int` може да изгледа овако:

| Елемент | Вредност | Адреса    |
|:-------:|:--------:|:---------:|
| `o[0]`  | $5$      | "`...00`" |
| `o[1]`  | $5$      | "`...04`" |
| `o[2]`  | $4$      | "`...08`" |
| `o[3]`  | $3$      | "`...12`" |
| `o[4]`  | $4$      | "`...16`" |
| ...     | ...      | ...       |
| `o[14]` | $4$      | "`...56`" |

Како је адресабилна јединица меморије један бајт, а сваки податак типа `int`
заузима 4 бајта, из табеле можеш да закључиш да се елементи низа налазе један
поред другог, јер се адресе суседних елемената разликују за 4 бајта.
